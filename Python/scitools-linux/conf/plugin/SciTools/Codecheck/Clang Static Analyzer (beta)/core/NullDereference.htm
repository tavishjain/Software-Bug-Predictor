<p><b>1.1.1.4. core.NullDereference (C, C++, ObjC)</b><br>
Check for dereferences of null pointers.</p>
<p>Examples:
<pre><div class="highlight"><pre><span></span><span class="c1">// C</span>
<span class="kt">void</span> <span class="nf">test</span><span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="n">p</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">p</span><span class="p">)</span>
    <span class="k">return</span><span class="p">;</span>

  <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">p</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span> <span class="c1">// warn</span>
<span class="p">}</span>

<span class="c1">// C</span>
<span class="kt">void</span> <span class="nf">test</span><span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="n">p</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">p</span><span class="p">)</span>
    <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">// warn</span>
<span class="p">}</span>

<span class="c1">// C++</span>
<span class="k">class</span> <span class="n">C</span> <span class="p">{</span>
<span class="nl">public</span><span class="p">:</span>
  <span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
<span class="p">};</span>

<span class="kt">void</span> <span class="nf">test</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">C</span> <span class="o">*</span><span class="n">pc</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="n">pc</span><span class="o">-&gt;</span><span class="n">x</span><span class="p">;</span> <span class="c1">// warn</span>
<span class="p">}</span>

<span class="c1">// Objective-C</span>
<span class="k">@interface</span> <span class="bp">MyClass</span> <span class="p">{</span>
<span class="k">@public</span>
  <span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">@end</span>

<span class="kt">void</span> <span class="n">test</span><span class="p">()</span> <span class="p">{</span>
  <span class="bp">MyClass</span> <span class="o">*</span><span class="n">obj</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="n">obj</span><span class="o">-&gt;</span><span class="n">x</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">// warn</span>
<span class="p">}</span>
</pre></div></pre></p>